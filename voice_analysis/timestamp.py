# -*- coding: utf-8 -*-
"""timestamp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rZuZw_irbyP8SNfI4t5kTIRtHo2yIIWt
"""

!pip install git+https://github.com/openai/whisper.git
!pip install torch  # 필요한 경우 PyTorch도 설치

import whisper

def transcribe_audio_with_timestamps(audio_file_path):
    model = whisper.load_model("base")
    result = model.transcribe(audio_file_path, word_timestamps=True)

    for segment in result["segments"]:
        print(f"Start: {segment['start']:.2f} seconds, End: {segment['end']:.2f} seconds")
        if "words" in segment:
            for word in segment["words"]:
                if 'word' in word:
                    print(f"Word: {word['word']}, Start: {word['start']:.2f}s, End: {word['end']:.2f}s")

audio_file_path = 'test_ji.wav'  # 적절한 경로로 변경

# 코드 실행
transcribe_audio_with_timestamps(audio_file_path)

import whisper

def transcribe_audio_with_timestamps(audio_file_path):
    model = whisper.load_model("base")
    result = model.transcribe(audio_file_path, word_timestamps=True)

    timestamps = []

    for segment in result["segments"]:
        if "words" in segment:
            for word in segment["words"]:
                if 'word' in word:
                    timestamps.append((word['start'], word['end']))

    return timestamps

def calculate_time_differences(timestamps1, timestamps2):
    max_length = min(len(timestamps1), len(timestamps2))
    time_comparisons = []

    for i in range(max_length):
        start_diff = timestamps1[i][0] - timestamps2[i][0]
        end_diff = timestamps1[i][1] - timestamps2[i][1]

        if start_diff > 0:
            start_message = f"세그먼트 {i + 1}: 첫 번째 파일이 시작 시간에서 {start_diff:.2f}초 느립니다."
        elif start_diff < 0:
            start_message = f"세그먼트 {i + 1}: 두 번째 파일이 시작 시간에서 {-start_diff:.2f}초 느립니다."
        else:
            start_message = f"세그먼트 {i + 1}: 두 파일의 시작 시간이 동일합니다."

        if end_diff > 0:
            end_message = f"세그먼트 {i + 1}: 첫 번째 파일이 끝나는 시간에서 {end_diff:.2f}초 느립니다."
        elif end_diff < 0:
            end_message = f"세그먼트 {i + 1}: 두 번째 파일이 끝나는 시간에서 {-end_diff:.2f}초 느립니다."
        else:
            end_message = f"세그먼트 {i + 1}: 두 파일의 끝나는 시간이 동일합니다."

        time_comparisons.append(start_message)
        time_comparisons.append(end_message)

    return time_comparisons

# 두 개의 음성 파일 경로
audio_file_path1 = 'test3.wav'  # 첫 번째 파일 경로
audio_file_path2 = 'seoul_test3.mp3'  # 두 번째 파일 경로

# 첫 번째 파일의 타임스탬프 분석
timestamps1 = transcribe_audio_with_timestamps(audio_file_path1)

# 두 번째 파일의 타임스탬프 분석
timestamps2 = transcribe_audio_with_timestamps(audio_file_path2)

# 타임스탬프 차이 계산
time_comparisons = calculate_time_differences(timestamps1, timestamps2)

# 결과 출력
for comparison in time_comparisons:
    print(comparison)